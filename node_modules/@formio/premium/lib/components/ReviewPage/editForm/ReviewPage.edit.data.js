import _ from 'lodash';
export default [
    {
        weight: 0,
        type: 'textfield',
        input: true,
        key: 'label',
        label: 'Label',
        placeholder: 'Field Label',
        tooltip: 'The label for this field.',
        validate: {
            required: true,
        },
    },
    {
        type: 'select',
        input: true,
        key: 'reviewFields',
        label: 'Review Fields',
        weight: 600,
        tooltip: 'Enter the fields to review',
        dataSrc: 'custom',
        valueProperty: 'value',
        multiple: true,
        data: {
            custom: function (context) {
                var values = [];
                var availableComp = ['textfield', 'checkbox', 'currency', 'datetime', 'day', 'email', 'number', 'phoneNumber', 'radio', 'select', 'textarea', 'tags', 'signature', 'time', 'url', 'selectboxes', 'address'];
                var arrayDataComponentsPath = [];
                context.utils.eachComponent(context.instance.options.editForm.components, function (component, path) {
                    if (component.tree && (!['container', 'address'].includes(component.type) || (component.type === 'address' && !component.enableManualMode))) {
                        arrayDataComponentsPath.push(path);
                    }
                    if (component.key !== context.data.key &&
                        availableComp.includes(component.type) &&
                        (!arrayDataComponentsPath.some(function (arrPath) { return _.startsWith(path, arrPath); }) || component.type === 'address')) {
                        values.push({
                            label: component.label || component.key,
                            value: { path: path, label: component.label }
                        });
                    }
                });
                return values;
            }
        },
    },
    {
        key: 'multiple',
        ignore: true,
    },
    {
        key: 'defaultValue',
        ignore: true,
    },
    {
        key: 'dbIndex',
        ignore: true,
    },
    {
        key: 'persistent',
        ignore: true,
    },
    {
        key: 'protected',
        ignore: true,
    },
    {
        key: 'encrypted',
        ignore: true,
    },
    {
        key: 'redrawOn',
        ignore: true,
    },
    {
        key: 'clearOnHide',
        ignore: true,
    },
    {
        key: 'calculateServer',
        ignore: true,
    },
    {
        key: 'allowCalculateOverride',
        ignore: true,
    },
    {
        key: 'customDefaultValuePanel',
        ignore: true,
    },
    {
        key: 'calculateValuePanel',
        ignore: true,
    },
];
