var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
import { Components } from 'formiojs';
import * as _ from 'lodash';
var Component = Components.components.component;
import editForm from './ReviewPage.form';
var ReviewPage = /** @class */ (function (_super) {
    __extends(ReviewPage, _super);
    function ReviewPage(component, options, data) {
        var _this = _super.call(this, component, options, data) || this;
        _this.reviewComponents = [];
        if (_this.component.reviewFields) {
            _this.reviewComponents = _.cloneDeep(_this.component.reviewFields);
        }
        return _this;
    }
    ReviewPage.schema = function () {
        var extend = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            extend[_i] = arguments[_i];
        }
        return Component.schema.apply(Component, __spreadArrays([{
                label: 'Review Page',
                key: 'reviewPage',
                type: 'reviewpage',
                tag: 'div'
            }], extend));
    };
    Object.defineProperty(ReviewPage, "builderInfo", {
        get: function () {
            return {
                title: 'Review Page',
                icon: 'info',
                group: 'premium',
                documentation: '',
                weight: 116,
                schema: ReviewPage.schema(),
            };
        },
        enumerable: false,
        configurable: true
    });
    ReviewPage.prototype.init = function () {
        var _this = this;
        var _a;
        if (this.options.readOnly) {
            return _super.prototype.init.call(this);
        }
        (_a = this.reviewComponents) === null || _a === void 0 ? void 0 : _a.forEach(function (reviewComponent) {
            var _a;
            var component = (_a = _this.root) === null || _a === void 0 ? void 0 : _a.getComponent(reviewComponent.path);
            if (component === null || component === void 0 ? void 0 : component.defaultValue) {
                reviewComponent.data = component.getView(component.defaultValue);
            }
        });
        return _super.prototype.init.call(this);
    };
    Object.defineProperty(ReviewPage.prototype, "inputInfo", {
        get: function () {
            var info = _super.prototype.inputInfo;
            return info;
        },
        enumerable: false,
        configurable: true
    });
    ReviewPage.prototype.render = function () {
        var _this = this;
        var _a;
        (_a = this.reviewComponents) === null || _a === void 0 ? void 0 : _a.forEach(function (reviewComponent) {
            var _a;
            var component = (_a = _this.root) === null || _a === void 0 ? void 0 : _a.getComponent(reviewComponent.path);
            reviewComponent.visible = component === null || component === void 0 ? void 0 : component.visible;
            if (_this.options.readOnly && _this.data) {
                _this.assignValue(reviewComponent, component);
            }
        });
        return _super.prototype.render.call(this, this.renderTemplate('reviewpage', { reviewComponents: this.reviewComponents }));
    };
    ReviewPage.prototype.checkRefreshOn = function (changed) {
        var _this = this;
        if (this.builderMode) {
            return;
        }
        changed === null || changed === void 0 ? void 0 : changed.forEach(function (comp) {
            var reviewingField = _this.reviewComponents.find(function (field) { return field.path === comp.instance.path; });
            if (reviewingField) {
                if (comp.component.type === 'address' && comp.instance.manualMode) {
                    reviewingField.data = '';
                    return;
                }
                reviewingField.data = comp.instance.getView(comp.value);
            }
        });
        _super.prototype.checkRefreshOn.call(this, changed);
        this.redraw();
    };
    ReviewPage.prototype.assignValue = function (reviewComponent, instance) {
        reviewComponent.data = instance.getView(this.data[reviewComponent.path])
            || (_.isString(this.data[reviewComponent.path])
                ? this.data[reviewComponent.path]
                : '');
        if (!reviewComponent.data && _.isUndefined(this.data[reviewComponent.path])) {
            reviewComponent.data = instance.data[instance.component.key];
        }
    };
    ReviewPage.prototype.attach = function (element) {
        var _this = this;
        var _a, _b;
        if ((this.options.readOnly && this.data) || (!this.options.readOnly && ((_a = this.root._submission) === null || _a === void 0 ? void 0 : _a._id))) {
            (_b = this.reviewComponents) === null || _b === void 0 ? void 0 : _b.forEach(function (comp) {
                var _a;
                if (!comp.data && comp.visible) {
                    var instance = (_a = _this.root) === null || _a === void 0 ? void 0 : _a.getComponent(comp.path);
                    if (instance.component.type === 'address' && instance.manualMode) {
                        comp.data = '';
                        return;
                    }
                    ;
                    _this.assignValue(comp, instance);
                }
            });
        }
        return _super.prototype.attach.call(this, element);
    };
    ReviewPage.editForm = editForm;
    return ReviewPage;
}(Component));
export default ReviewPage;
