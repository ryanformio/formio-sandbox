Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default=function(ctx) {
var __t, __p = '', __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<div class="formio-tagpad-container clearfix">\n  <div ref="canvasContainer" class="formio-tagpad-image-container" style="max-width: ' +
((__t = (ctx.canvasMaxWidth)) == null ? '' : __t) +
'; max-height: ' +
((__t = (ctx.canvasMaxHeight)) == null ? '' : __t) +
';">\n      <div ref="background" class="formio-tagpad-background">\n        ';
 if (!ctx.component.image && !ctx.component.imageUrl) { ;
__p += '\n            Background image is not specified. Tagpad doesn\\\'t work without background image\n        ';
 } ;
__p += '\n        ';
 if (ctx.component.imageUrl) { ;
__p += '\n            <img src=' +
((__t = (ctx.component.imageUrl)) == null ? '' : __t) +
' ref="image" alt="" width="100%"/>\n        ';
 } ;
__p += '\n      </div>\n      <div ref="canvas" class="formio-tagpad-canvas"></div>\n  </div>\n  <div ref="formContainer" class="formio-tagpad-form-container">\n      <div class="formio-tagpad-form">\n        ';
 if (ctx.selectedDot) { ;
__p += '\n          <p class="formio-tagpad-form-title">Dot: ' +
((__t = (ctx.selectedDot.index + 1)) == null ? '' : __t) +
'</p>\n          <div  ref="form">' +
((__t = (ctx.components)) == null ? '' : __t) +
'</div>\n          ';
 if (ctx.buttons.removeDot) { ;
__p += '\n            <button class="btn btn-sm btn-danger formio-tagpad-remove-button" ref="removeDot">\n              <i class="fa fa-trash"></i>\n            </button>\n          ';
 } ;
__p += '\n        ';
 } else if (ctx.hasDots && !ctx.disabled && !ctx.component.disabled && !ctx.self.shouldDisabled) { ;
__p += '\n          <p class="formio-tagpad-form-title">No dot selected</p>\n        ';
 } else if (ctx.component.disabled || ctx.disabled || ctx.self.shouldDisabled) { ;
__p += '\n          <div class="formio-tagpad-all-data">' +
((__t = (ctx.self.getDataAsString())) == null ? '' : __t) +
'</div>\n        ';
 } ;
__p += '\n      </div>\n  </div>\n</div>\n';
return __p
}