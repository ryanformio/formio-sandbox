Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default=function(ctx) {
var __t, __p = '', __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
__p += '<div class="dynamicWizard-listgroup list-group\n    ' +
((__t = ( ctx.component.striped ? 'table-striped' : '')) == null ? '' : __t) +
'\n    ' +
((__t = ( ctx.component.bordered ? 'table-bordered' : '')) == null ? '' : __t) +
'\n    ' +
((__t = ( ctx.component.hover ? 'table-hover' : '')) == null ? '' : __t) +
'\n    ' +
((__t = ( ctx.component.condensed ? 'table-sm' : '')) == null ? '' : __t) +
'\n    "\n    role="grid"\n    aria-labelledby="l-' +
((__t = (ctx.instance.id)) == null ? '' : __t) +
'-' +
((__t = (ctx.component.key)) == null ? '' : __t) +
' \n    ';
 if (ctx.component.description) { ;
__p += 'd-' +
((__t = (ctx.instance.id)) == null ? '' : __t) +
'-' +
((__t = (ctx.component.key)) == null ? '' : __t);
 } ;
__p += '"\n>\n  ';
 if (ctx.readOnly || !ctx.isChangingMode || ctx.isDisabled) { ;
__p += '\n  ';
 if (ctx.header) { ;
__p += '\n  <div role="presentation" class="list-group-item list-group-header">\n    ' +
((__t = (ctx.header)) == null ? '' : __t) +
'\n  </div>\n  ';
 } ;
__p += '\n  ';
 ctx.rows.forEach(function(row, rowIndex) { ;
__p += '\n  <div role="presentation" class="list-group-card" ref="' +
((__t = (ctx.ref.row)) == null ? '' : __t) +
'">\n    ' +
((__t = (row)) == null ? '' : __t) +
'\n    <div class="has-error">\n      <div class="dynamicWizard-row-error help-block">\n        ' +
((__t = (ctx.errors[rowIndex])) == null ? '' : __t) +
'\n      </div>\n    </div>\n  </div>\n  ';
 }) ;
__p += '\n  ';
 if (ctx.footer) { ;
__p += '\n  <div class="list-group-item list-group-footer">\n    ' +
((__t = (ctx.footer)) == null ? '' : __t) +
'\n  </div>\n  ';
 } ;
__p += '\n  ';
 } else { ;
__p += '\n  <div class="list-group-field" ref="' +
((__t = (ctx.ref.row)) == null ? '' : __t) +
'">\n    ' +
((__t = ( ctx.currentComponent )) == null ? '' : __t) +
'\n  </div>\n  ';
 } ;
__p += '\n</div>\n';
 if (!ctx.readOnly && !ctx.isBlocking) { ;
__p += '\n';
 if (!ctx.isChangingMode) { ;
__p += '\n';
 if (ctx.hasAddButton) { ;
__p += '\n  <p>Would you like to add another?</p>\n  <button class="btn btn-primary"\n    ref="' +
((__t = (ctx.ref.agreeButton)) == null ? '' : __t) +
'"\n    aria-label="Add Another Entry"\n  >\n    ' +
((__t = (ctx.t('Add another'))) == null ? '' : __t) +
'\n  </button>\n';
 } ;
__p += '\n';
 } else { ;
__p += '\n<div class="list-inline" id="' +
((__t = ( ctx.dynamicWizardKey )) == null ? '' : __t) +
'-nav">\n  ';
 if (ctx.buttons.cancel) { ;
__p += '\n  <div class="list-inline-item">\n    <button class="btn btn-secondary btn-wizard-nav-cancel"\n      aria-label="Cancel button. Click to reset entry"\n      ref="' +
((__t = (ctx.dynamicWizardKey)) == null ? '' : __t) +
'-cancel"\n    >\n    ' +
((__t = (ctx.t('cancel'))) == null ? '' : __t) +
'\n    </button>\n  </div>\n  ';
 } ;
__p += '\n  ';
 if (ctx.buttons.previous) { ;
__p += '\n  <div class="list-inline-item">\n    <button class="btn btn-primary btn-wizard-nav-previous"\n      aria-label="Previous button. Click to go back to the previous component"\n      ref="' +
((__t = (ctx.dynamicWizardKey)) == null ? '' : __t) +
'-previous"\n    >\n      ' +
((__t = (ctx.t('previous'))) == null ? '' : __t) +
'\n    </button>\n  </div>\n  ';
 } ;
__p += '\n  ';
 if (ctx.buttons.next) { ;
__p += '\n  <div class="list-inline-item">\n    <button class="btn btn-primary btn-wizard-nav-next" \n      ref="' +
((__t = (ctx.dynamicWizardKey)) == null ? '' : __t) +
'-next"\n      aria-label="Next button. Click to go to the next component"\n    >\n      ' +
((__t = (ctx.t('next'))) == null ? '' : __t) +
'\n    </button>\n  </div>\n  ';
 } ;
__p += '\n</div>\n';
 } ;
__p += '\n';
 } ;
__p += '\n';
 if (ctx.options.vpat) { ;
__p += '\n<span class="sr-only" aria-live="assertive" ref="dWizardLiveRegion"></span>\n';
 } ;

return __p
}