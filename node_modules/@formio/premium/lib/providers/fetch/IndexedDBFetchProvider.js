var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { FetchProvider } from './FetchProvider';
var IndexedDBFetchProvider = /** @class */ (function (_super) {
    __extends(IndexedDBFetchProvider, _super);
    function IndexedDBFetchProvider(options) {
        var _this = _super.call(this, options) || this;
        _this.dataPromiseResolve = function () { return null; };
        return _this;
    }
    Object.defineProperty(IndexedDBFetchProvider, "key", {
        get: function () {
            return 'indexeddb';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IndexedDBFetchProvider, "displayName", {
        get: function () {
            return 'IndexedDB';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IndexedDBFetchProvider, "availableToSourceOptions", {
        get: function () {
            return false;
        },
        enumerable: false,
        configurable: true
    });
    IndexedDBFetchProvider.prototype.getData = function (params) {
        var _this = this;
        var dataPromise = new Formio.Promise(function (resolve) {
            _this.dataPromiseResolve = resolve;
        });
        if (this.options.indexeddb && this.options.indexeddb.database && this.options.indexeddb.table) {
            var request_1 = window.indexedDB.open(this.options.indexeddb.database);
            request_1.onupgradeneeded = function (event) {
                if (_this.options.customOptions) {
                    var db_1 = event.target.result;
                    var objectStore = db_1.createObjectStore(_this.options.indexeddb.table, { keyPath: 'myKey', autoIncrement: true });
                    objectStore.transaction.oncomplete = function () {
                        var transaction = db_1.transaction(_this.options.indexeddb.table, 'readwrite');
                        _this.options.customOptions.forEach(function (item) {
                            transaction.objectStore(_this.options.indexeddb.table).put(item);
                        });
                    };
                }
            };
            request_1.onerror = function () {
                window.alert(request_1.errorCode);
            };
            request_1.onsuccess = function (event) {
                var db = event.target.result;
                var transaction = db.transaction(_this.options.indexeddb.table, 'readwrite');
                var objectStore = transaction.objectStore(_this.options.indexeddb.table);
                new Formio.Promise(function (resolve) {
                    var responseItems = [];
                    objectStore.getAll().onsuccess = function (event) {
                        event.target.result.forEach(function (item) {
                            responseItems.push(item);
                        });
                        resolve(responseItems);
                    };
                }).then(function (items) { return _this.dataPromiseResolve(items); });
            };
        }
        else {
            this.dataPromiseResolve();
        }
        return dataPromise;
    };
    return IndexedDBFetchProvider;
}(FetchProvider));
export { IndexedDBFetchProvider };
