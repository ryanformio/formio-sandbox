import { Formio } from 'formiojs';
import XHR from './xhr';
var S3 = /** @class */ (function () {
    function S3(formio) {
        this.formio = formio;
    }
    S3.prototype.uploadFile = function (file, fileName, dir, progressCallback, url, options, fileKey, groupPermissions, groupId) {
        return XHR.upload(this.formio, 's3', function (xhr, response) {
            response.data.fileName = fileName;
            response.data.key = XHR.path([response.data.key, dir, fileName]);
            if (response.signed) {
                xhr.open('PUT', response.signed);
                xhr.setRequestHeader('Content-Type', file.type);
                return file;
            }
            else {
                var fd = new FormData();
                for (var _i = 0, _a = Object.keys(response.data); _i < _a.length; _i++) {
                    var key = _a[_i];
                    fd.append(key, response.data[key]);
                }
                fd.append('file', file);
                xhr.open('POST', response.url);
                return fd;
            }
        }, file, fileName, dir, progressCallback, groupPermissions, groupId).then(function (response) {
            return {
                storage: 's3',
                name: fileName,
                bucket: response.bucket,
                key: response.data.key,
                url: XHR.path([response.url, response.data.key]),
                acl: response.data.acl,
                size: file.size,
                type: file.type,
            };
        });
    };
    S3.prototype.downloadFile = function (file) {
        if (file.acl !== 'public-read') {
            return this.formio.makeRequest('file', this.formio.formUrl + "/storage/s3?bucket=" + XHR.trim(file.bucket) + "&key=" + XHR.trim(file.key), 'GET');
        }
        else {
            return Formio.Promise.resolve(file);
        }
    };
    S3.title = 'AWS S3';
    return S3;
}());
export default S3;
