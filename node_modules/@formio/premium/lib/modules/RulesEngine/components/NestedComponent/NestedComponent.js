import { Components } from 'formiojs';
import { superSet } from '../../utils/utils';
var NestedComponent = Components.components.nested;
var Field = Components.components.field;
if (Formio.rulesEntities) {
    var originalSetVisible_1 = superSet(NestedComponent, 'visible');
    Object.defineProperty(NestedComponent.prototype, 'visible', {
        enumerable: true,
        configurable: true,
        set: function (value) {
            if (this.lazyLoad && (this.components.length === 0) && value) {
                this.addComponents();
            }
            originalSetVisible_1.call(this, value);
        }
    });
    NestedComponent.prototype.init = function init() {
        this.components = this.components || [];
        if (this.builderMode || !this.lazyLoad || this.visible) {
            this.addComponents();
        }
        return Field.prototype.init.call(this);
    };
}
export default NestedComponent;
