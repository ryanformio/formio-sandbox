import _ from 'lodash';
import ComponentEditData from './editForm/Component.edit.data';
import ComponentEditDisplay from './editForm/Component.edit.display';
import ComponentEditRules from './editForm/Component.edit.rules';
import ComponentEditLayout from './editForm/Component.edit.layout';
import ComponentEditApi from './editForm/Component.edit.api';
import ComponentEditAddons from './editForm/Component.edit.addons';
import ComponentSidebarDisplay from './editForm/Component.sidebar.display';
import EditFormUtils from './editForm/utils';
import OriginalForm from 'formiojs/components/_classes/component/Component.form.js';
import { Formio } from 'formiojs';
export default (function () {
    var extend = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        extend[_i] = arguments[_i];
    }
    if (!Formio.rulesEntities) {
        return OriginalForm.apply(void 0, extend);
    }
    var components = _.cloneDeep([
        {
            type: 'tabs',
            key: 'tabs',
            components: [
                {
                    label: 'Display',
                    key: 'display',
                    weight: 0,
                    components: ComponentEditDisplay,
                    sidebar: ComponentSidebarDisplay,
                },
                {
                    label: 'Data',
                    key: 'data',
                    weight: 10,
                    components: ComponentEditData,
                },
                {
                    label: 'Rules',
                    key: 'rules',
                    weight: 20,
                    components: ComponentEditRules,
                },
                {
                    label: 'API',
                    key: 'api',
                    weight: 30,
                    components: ComponentEditApi,
                },
                {
                    label: 'Layout',
                    key: 'layout',
                    weight: 40,
                    components: ComponentEditLayout,
                },
                {
                    label: 'Addons',
                    key: 'addons',
                    weight: 50,
                    components: ComponentEditAddons
                },
            ],
        },
    ]).concat(extend.map(function (items) {
        var filteredItems = EditFormUtils.filterAndTransformSettings(items);
        return {
            type: 'tabs',
            key: 'tabs',
            verticalLayout: true,
            components: _.cloneDeep(filteredItems),
        };
    }));
    return {
        components: _.unionWith(components, EditFormUtils.unifyComponents).concat({
            type: 'hidden',
            key: 'type',
        }),
    };
});
